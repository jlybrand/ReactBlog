{"ast":null,"code":"var _jsxFileName = \"/home/jason/Desktop/Projects/ReactProjects/blog-site/client/src/components/singlepost/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useLocation } from \"react-router\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport { Link } from \"react-router-dom\";\nimport \"./singlepost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const publicFolder = \"http://localhost:5000/images/\";\n  const location = useLocation();\n  const path = location.pathname.split('/')[2];\n  const [post, setPost] = useState({});\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [postBody, setPostBody] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n      setPostBody(res.data.postBody);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async e => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (error) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc,\n        postBody\n      });\n      setUpdateMode(false);\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-post-wrap\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: publicFolder + post.photo,\n        alt: \"\",\n        className: \"single-post-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"single-post-title-input\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"single-post-title\",\n        children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-edit-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"edit-icon far fa-edit\",\n            onClick: e => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"edit-icon fa-solid fa-trash-can\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"author\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", post.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"single-post-input\",\n        value: desc,\n        autoFocus: true,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"single-post-description\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"single-post-input\",\n        value: postBody,\n        autoFocus: true,\n        onChange: e => setPostBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"single-post-pody\",\n        children: postBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post-bttn\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SinglePost, \"Y/VZm3kKZCro4kY7Sgme4T03Niw=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/home/jason/Desktop/Projects/ReactProjects/blog-site/client/src/components/singlepost/SinglePost.jsx"],"names":["axios","useLocation","useContext","useEffect","useState","Context","Link","SinglePost","publicFolder","location","path","pathname","split","post","setPost","user","title","setTitle","desc","setDesc","postBody","setPostBody","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","e","delete","_id","username","window","replace","error","handleUpdate","put","photo","target","value","Date","createdAt","toDateString"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,kBAAP;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAMC,YAAY,GAAG,+BAArB;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,IAAI,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAWb,UAAU,CAACG,OAAD,CAA3B;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,KAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,OAAO,GAAG,YAAY;AAC1B,YAAMC,GAAG,GAAG,MAAMzB,KAAK,CAAC0B,GAAN,CAAU,YAAYhB,IAAtB,CAAlB;AACAI,MAAAA,OAAO,CAACW,GAAG,CAACE,IAAL,CAAP;AACAV,MAAAA,QAAQ,CAACQ,GAAG,CAACE,IAAJ,CAASX,KAAV,CAAR;AACAG,MAAAA,OAAO,CAACM,GAAG,CAACE,IAAJ,CAAST,IAAV,CAAP;AACAG,MAAAA,WAAW,CAACI,GAAG,CAACE,IAAJ,CAASP,QAAV,CAAX;AAED,KAPD;;AASAI,IAAAA,OAAO;AACR,GAXQ,EAWN,CAACd,IAAD,CAXM,CAAT;;AAaA,QAAMkB,YAAY,GAAG,MAAOC,CAAP,IAAa;AAEhC,QAAI;AACF,YAAM7B,KAAK,CAAC8B,MAAN,CAAc,UAASjB,IAAI,CAACkB,GAAI,EAAhC,EAAmC;AACvCJ,QAAAA,IAAI,EAAE;AAAEK,UAAAA,QAAQ,EAAEjB,IAAI,CAACiB;AAAjB;AADiC,OAAnC,CAAN;AAGAC,MAAAA,MAAM,CAACxB,QAAP,CAAgByB,OAAhB,CAAwB,GAAxB;AAED,KAND,CAME,OAAOC,KAAP,EAAc,CAAG;AACpB,GATD;;AAWA,QAAMC,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMpC,KAAK,CAACqC,GAAN,CAAW,UAASxB,IAAI,CAACkB,GAAI,EAA7B,EAAgC;AACpCC,QAAAA,QAAQ,EAAEjB,IAAI,CAACiB,QADqB;AAEpChB,QAAAA,KAFoC;AAGpCE,QAAAA,IAHoC;AAIpCE,QAAAA;AAJoC,OAAhC,CAAN;AAMAG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KARD,CAQE,OAAOY,KAAP,EAAc,CAAG;AACpB,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBACGtB,IAAI,CAACyB,KAAL,iBACC;AACE,QAAA,GAAG,EAAE9B,YAAY,GAAGK,IAAI,CAACyB,KAD3B;AAEE,QAAA,GAAG,EAAC,EAFN;AAGE,QAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,cAFJ,EAQGhB,UAAU,gBACT;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEN,KAFT;AAGE,QAAA,SAAS,EAAC,yBAHZ;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,QAAQ,EAAGa,CAAD,IAAOZ,QAAQ,CAACY,CAAC,CAACU,MAAF,CAASC,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA,cADS,gBAST;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA,mBACGxB,KADH,EAEGH,IAAI,CAACmB,QAAL,MAAkBjB,IAAlB,aAAkBA,IAAlB,uBAAkBA,IAAI,CAAEiB,QAAxB,kBACC;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,uBADZ;AAEE,YAAA,OAAO,EAAGH,CAAD,IAAON,aAAa,CAAC,IAAD;AAF/B;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AACE,YAAA,SAAS,EAAC,iCADZ;AAEE,YAAA,OAAO,EAAEK;AAFX;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAoCE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAA,6CAEE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASf,IAAI,CAACmB,QAAS,EAAlC;AAAqC,YAAA,SAAS,EAAC,MAA/C;AAAA,mCACE;AAAA,8BAAKnB,IAAI,CAACmB,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAA,oBAAO,IAAIS,IAAJ,CAAS5B,IAAI,CAAC6B,SAAd,EAAyBC,YAAzB;AAAP;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cApCF,EA6CGrB,UAAU,gBACT;AACE,QAAA,SAAS,EAAC,mBADZ;AAEE,QAAA,KAAK,EAAEJ,IAFT;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,QAAQ,EAAGW,CAAD,IAAOV,OAAO,CAACU,CAAC,CAACU,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,cADS,gBAST;AAAG,QAAA,SAAS,EAAC,yBAAb;AAAA,kBAAwCtB;AAAxC;AAAA;AAAA;AAAA;AAAA,cAtDJ,EAyDGI,UAAU,gBACT;AACE,QAAA,SAAS,EAAC,mBADZ;AAEE,QAAA,KAAK,EAAEF,QAFT;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,QAAQ,EAAGS,CAAD,IAAOR,WAAW,CAACQ,CAAC,CAACU,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,cADS,gBAST;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA,kBAAiCpB;AAAjC;AAAA;AAAA;AAAA;AAAA,cAlEJ,EAsEKE,UAAU,iBACT;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAEc,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvEN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiFD;;GAhIuB7B,U;UAELN,W;;;KAFKM,U","sourcesContent":["import axios from \"axios\";\nimport { useLocation } from \"react-router\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport { Link } from \"react-router-dom\";\nimport \"./singlepost.css\";\n\nexport default function SinglePost() {\n  const publicFolder = \"http://localhost:5000/images/\";\n  const location = useLocation()\n  const path = location.pathname.split('/')[2];\n  const [post, setPost] = useState({});\n  const { user } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [postBody, setPostBody] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n      setPostBody(res.data.postBody);\n\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async (e) => {\n\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: { username: user.username },\n      });\n      window.location.replace(\"/\");\n\n    } catch (error) { }\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc,\n        postBody,\n      });\n      setUpdateMode(false);\n    } catch (error) { }\n  };\n\n  return (\n    <div className=\"single-post\">\n      <div className=\"single-post-wrap\">\n        {post.photo && (\n          <img\n            src={publicFolder + post.photo}\n            alt=\"\"\n            className=\"single-post-img\"\n          />\n        )}\n        {updateMode ? (\n          <input\n            type=\"text\"\n            value={title}\n            className=\"single-post-title-input\"\n            autoFocus\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        ) : (\n          <h1 className=\"single-post-title\">\n            {title}\n            {post.username === user?.username && (\n              <div className=\"post-edit-container\">\n                <i\n                  className=\"edit-icon far fa-edit\"\n                  onClick={(e) => setUpdateMode(true)}\n                >\n                </i>\n                <i\n                  className=\"edit-icon fa-solid fa-trash-can\"\n                  onClick={handleDelete}\n                >\n                </i>\n              </div>\n            )}\n          </h1>\n        )}\n\n        <div className=\"post-info\">\n          <span className=\"author\">\n            Author:\n            <Link to={`/?user=${post.username}`} className=\"link\">\n              <b> {post.username}</b>\n            </Link>\n          </span>\n          <span>{new Date(post.createdAt).toDateString()}</span>\n        </div>\n        {updateMode ? (\n          <textarea\n            className=\"single-post-input\"\n            value={desc}\n            autoFocus\n            onChange={(e) => setDesc(e.target.value)}\n          />\n\n        ) : (\n          <p className=\"single-post-description\">{desc}</p>\n        )}\n\n        {updateMode ? (\n          <textarea\n            className=\"single-post-input\"\n            value={postBody}\n            autoFocus\n            onChange={(e) => setPostBody(e.target.value)}\n          />\n\n        ) : (\n          <p className=\"single-post-pody\">{postBody}</p>\n        )}\n\n        {\n          (updateMode && (\n            <button className=\"post-bttn\" onClick={handleUpdate}>\n              Update\n            </button>\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}