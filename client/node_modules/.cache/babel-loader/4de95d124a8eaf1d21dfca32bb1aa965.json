{"ast":null,"code":"var _jsxFileName = \"/home/jason/Desktop/Projects/ReactProjects/blog-site/client/src/components/singlepost/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\n// import axios from \"axios\";\n// import { useLocation } from \"react-router\";\n// import { useContext, useEffect, useState } from \"react\";\n// import { Context } from \"../../context/Context\";\n// import { Link } from \"react-router-dom\";\n// import \"./singlepost.css\";\n// export default function SinglePost() {\n//   const publicFolder = \"http://localhost:5000/images/\";\n//   const location = useLocation()\n//   const path = location.pathname.split('/')[2];\n//   const [post, setPost] = useState({});\n//   const { user } = useContext(Context);\n//   const [title, setTitle] = useState(\"\");\n//   const [desc, setDesc] = useState(\"\");\n//   // const [postBody, setPostBody] = useState(\"\");\n//   const [updateMode, setUpdateMode] = useState(false);\n//   useEffect(() => {\n//     const getPost = async () => {\n//       const res = await axios.get(\"/posts/\" + path);\n//       setPost(res.data);\n//       setTitle(res.data.title);\n//       setDesc(res.data.desc);\n//       // setPostBody(res.data.postBody);\n//     };\n//     getPost();\n//   }, [path]);\n//   const handleDelete = async (e) => {\n//     try {\n//       await axios.delete(`/posts/${post._id}`, {\n//         data: { username: user.username },\n//       });\n//       window.location.replace(\"/\");\n//     } catch (error) { }\n//   };\n//   const handleUpdate = async () => {\n//     try {\n//       await axios.put(`/posts/${post._id}`, {\n//         username: user.username,\n//         title,\n//         desc,\n//         // postBody,\n//       });\n//       setUpdateMode(false);\n//     } catch (error) { }\n//   };\n//   return (\n//     <div className=\"single-post\">\n//       <div className=\"single-post-wrap\">\n//         {post.photo && (\n//           <img\n//             src={`${publicFolder}${post.photo}`}\n//             alt=\"\"\n//             className=\"single-post-img\"\n//           />\n//         )}\n//         {updateMode ? (\n//           <input\n//             type=\"text\"\n//             value={title}\n//             className=\"single-post-title-input\"\n//             autoFocus\n//             onChange={(e) => setTitle(e.target.value)}\n//           />\n//         ) : (\n//           <h1 className=\"single-post-title\">\n//             {title}\n//             {post.username === user?.username && (\n//               <div className=\"post-edit-container\">\n//                 <i\n//                   className=\"edit-icon far fa-edit\"\n//                   onClick={(e) => setUpdateMode(true)}\n//                 >\n//                 </i>\n//                 <i\n//                   className=\"edit-icon fa-regular fa-trash-can\"\n//                   onClick={handleDelete}\n//                 >\n//                 </i>\n//               </div>\n//             )}\n//           </h1>\n//         )}\n//         <div className=\"post-info\">\n//           <span className=\"author\">\n//             Author:\n//             <Link to={`/?user=${post.username}`} className=\"link\">\n//               <b> {post.username}</b>\n//             </Link>\n//           </span>\n//           <span>{new Date(post.createdAt).toDateString()}</span>\n//         </div>\n//         {updateMode ? (\n//           <textarea\n//             className=\"single-post-input\"\n//             value={desc}\n//             autoFocus\n//             onChange={(e) => setDesc(e.target.value)}\n//           />\n//         ) : (\n//           <p className=\"single-post-description\">{desc}</p>\n//         )}\n//         {/* {updateMode ? (\n//           <textarea\n//             className=\"single-post-input\"\n//             value={postBody}\n//             autoFocus\n//             onChange={(e) => setPostBody(e.target.value)}\n//           />\n//         ) : (\n//           <p className=\"single-post-pody\">{postBody}</p>\n//         )} */}\n//         {\n//           (updateMode && (\n//             <button className=\"post-bttn\" onClick={handleUpdate}>\n//               Update\n//             </button>\n//           ))\n//         }\n//       </div>\n//     </div>\n//   );\n// }\nimport axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport \"./singlePost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      });\n      setUpdateMode(false);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-post-wrap\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PF + post.photo,\n        alt: \"\",\n        className: \"single-post-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"single-post-title-input\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"single-post-title\",\n        children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", post.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SinglePost, \"xs7JL4oKuIn8mxMMLFGIhzF2qFM=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/home/jason/Desktop/Projects/ReactProjects/blog-site/client/src/components/singlepost/SinglePost.jsx"],"names":["axios","useContext","useEffect","useState","useLocation","Link","Context","SinglePost","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","err","handleUpdate","put","photo","e","target","value","Date","createdAt","toDateString"],"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","sourcesContent":["// import axios from \"axios\";\n// import { useLocation } from \"react-router\";\n// import { useContext, useEffect, useState } from \"react\";\n// import { Context } from \"../../context/Context\";\n// import { Link } from \"react-router-dom\";\n// import \"./singlepost.css\";\n\n// export default function SinglePost() {\n//   const publicFolder = \"http://localhost:5000/images/\";\n//   const location = useLocation()\n//   const path = location.pathname.split('/')[2];\n//   const [post, setPost] = useState({});\n//   const { user } = useContext(Context);\n//   const [title, setTitle] = useState(\"\");\n//   const [desc, setDesc] = useState(\"\");\n//   // const [postBody, setPostBody] = useState(\"\");\n//   const [updateMode, setUpdateMode] = useState(false);\n\n//   useEffect(() => {\n//     const getPost = async () => {\n//       const res = await axios.get(\"/posts/\" + path);\n//       setPost(res.data);\n//       setTitle(res.data.title);\n//       setDesc(res.data.desc);\n//       // setPostBody(res.data.postBody);\n\n//     };\n\n//     getPost();\n//   }, [path]);\n\n//   const handleDelete = async (e) => {\n//     try {\n//       await axios.delete(`/posts/${post._id}`, {\n//         data: { username: user.username },\n//       });\n\n//       window.location.replace(\"/\");\n\n//     } catch (error) { }\n//   };\n\n//   const handleUpdate = async () => {\n//     try {\n//       await axios.put(`/posts/${post._id}`, {\n//         username: user.username,\n//         title,\n//         desc,\n//         // postBody,\n//       });\n\n//       setUpdateMode(false);\n\n//     } catch (error) { }\n//   };\n\n//   return (\n//     <div className=\"single-post\">\n//       <div className=\"single-post-wrap\">\n//         {post.photo && (\n//           <img\n//             src={`${publicFolder}${post.photo}`}\n//             alt=\"\"\n//             className=\"single-post-img\"\n//           />\n//         )}\n//         {updateMode ? (\n//           <input\n//             type=\"text\"\n//             value={title}\n//             className=\"single-post-title-input\"\n//             autoFocus\n//             onChange={(e) => setTitle(e.target.value)}\n//           />\n//         ) : (\n//           <h1 className=\"single-post-title\">\n//             {title}\n//             {post.username === user?.username && (\n//               <div className=\"post-edit-container\">\n//                 <i\n//                   className=\"edit-icon far fa-edit\"\n//                   onClick={(e) => setUpdateMode(true)}\n//                 >\n//                 </i>\n//                 <i\n//                   className=\"edit-icon fa-regular fa-trash-can\"\n//                   onClick={handleDelete}\n//                 >\n//                 </i>\n//               </div>\n//             )}\n//           </h1>\n//         )}\n\n//         <div className=\"post-info\">\n//           <span className=\"author\">\n//             Author:\n//             <Link to={`/?user=${post.username}`} className=\"link\">\n//               <b> {post.username}</b>\n//             </Link>\n//           </span>\n//           <span>{new Date(post.createdAt).toDateString()}</span>\n//         </div>\n//         {updateMode ? (\n//           <textarea\n//             className=\"single-post-input\"\n//             value={desc}\n//             autoFocus\n//             onChange={(e) => setDesc(e.target.value)}\n//           />\n\n//         ) : (\n//           <p className=\"single-post-description\">{desc}</p>\n//         )}\n\n//         {/* {updateMode ? (\n//           <textarea\n//             className=\"single-post-input\"\n//             value={postBody}\n//             autoFocus\n//             onChange={(e) => setPostBody(e.target.value)}\n//           />\n\n//         ) : (\n//           <p className=\"single-post-pody\">{postBody}</p>\n//         )} */}\n\n//         {\n//           (updateMode && (\n//             <button className=\"post-bttn\" onClick={handleUpdate}>\n//               Update\n//             </button>\n//           ))\n//         }\n//       </div>\n//     </div>\n//   );\n// }\n\nimport axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport \"./singlePost.css\";\n\nexport default function SinglePost() {\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const { user } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: { username: user.username },\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc,\n      });\n      setUpdateMode(false)\n    } catch (err) {}\n  };\n\n  return (\n    <div className=\"single-post\">\n      <div className=\"single-post-wrap\">\n        {post.photo && (\n          <img src={PF + post.photo} alt=\"\" className=\"single-post-img\" />\n        )}\n        {updateMode ? (\n          <input\n            type=\"text\"\n            value={title}\n            className=\"single-post-title-input\"\n            autoFocus\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        ) : (\n          <h1 className=\"single-post-title\">\n            {title}\n            {post.username === user?.username && (\n              <div className=\"singlePostEdit\">\n                <i\n                  className=\"singlePostIcon far fa-edit\"\n                  onClick={() => setUpdateMode(true)}\n                ></i>\n                <i\n                  className=\"singlePostIcon far fa-trash-alt\"\n                  onClick={handleDelete}\n                ></i>\n              </div>\n            )}\n          </h1>\n        )}\n        <div className=\"singlePostInfo\">\n          <span className=\"singlePostAuthor\">\n            Author:\n            <Link to={`/?user=${post.username}`} className=\"link\">\n              <b> {post.username}</b>\n            </Link>\n          </span>\n          <span className=\"singlePostDate\">\n            {new Date(post.createdAt).toDateString()}\n          </span>\n        </div>\n        {updateMode ? (\n          <textarea\n            className=\"singlePostDescInput\"\n            value={desc}\n            onChange={(e) => setDesc(e.target.value)}\n          />\n        ) : (\n          <p className=\"singlePostDesc\">{desc}</p>\n        )}\n        {updateMode && (\n          <button className=\"singlePostButton\" onClick={handleUpdate}>\n            Update\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}